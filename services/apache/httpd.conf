# httpd(8)
# apachectl(8)

# Конфигурационный файл веб-сервера Apache 2.

# NB: Полную документацию см. на странице http://httpd.apache.org/docs/

# ------------------------------------------------------------------------------
# ОСНОВНЫЕ ПАРАМЕТРЫ

# Прослушивать указанный сокет.
# Можно указать только номер порта, тогда сервер будет прослушивать указанный
# порт на всех доступных интерфейсах.
Listen 80

# Запускать с правами указанного пользователя/группы:
User apache
Group apache

# Путь к каталогу, который сервер будет считать корневым каталогом для хранения
# файлов конфигурации, файлов журналов etc.
# NB: в случае, если где-либо в конфигурационном файле указывается относительный,
# то считается что этот путь указан относительно значения ServerRoot.
# При указании значения ServerRoot слеш в конце НЕ ставится.
ServerRoot "/etc/httpd"

# Расположение PID-файла.
# Расположение должно совпадать с тем что передается при запуске через файлы
# /etc/sysconfig/httpd и аналогичные.
PidFile run/httpd.pid

# Email администратора веб-сервера может выводится на страницах генерируемых
# самим сервером Apache: страницы ошибок HTTP, листинги каталогов etc.
ServerAdmin webmaster@example.com

# Имя сервера должно содержать имя хоста (или адрес хоста) на котором запущен
# Apache и номер порта, который он прослушивает. Имя сервера используется
# Apache в том числе для идентификации самого себя.
ServerName example.com:80

# Отображать "подпись" в конце страниц генерируемых сервером. Значение "EMail"
# также предписывает включать в подпись ссылку mailto со значением ServerAdmin.
ServerSignature On

# Степень детализации информации в подписи о веб-сервере и ОС под которой он
# работает.
ServerTokens Full

# Определяет каким образом Apache конструирует ссылки на собственные страницы:
# On - используя значение директивы ServerName;
# Off - используя данные предоставленные клиентом.
UseCanonicalName Off

# Корневой каталог для хранения HTML-страниц, отдаваемых сервером.
DocumentRoot "/var/www/html"

# Файл, отдаваемый по умолчанию:
DirectoryIndex index.html

# Имя файлов использующихся для хранения директив ограничивающих доступ к
# каталогу, в котором файл с таким именем находится:
AccessFileName .htaccess

# Максимальное время ожидания ответа от клиентов/cgi-скриптов и прочего.
# Дополнительную информацию см. в описании директивы в документации модуля core.
Timeout 60

# ------------------------------------------------------------------------------
# ПАРАМЕТРЫ KEEPALIVE


# Разрешить использование постоянных (persistent) сессий HTTP?
# С помощью особенности KeepAlive можно поддерживать несколько HTTP-сессий в
# рамках одного TCP-соединения.
KeepAlive On

# Максимальное количество запросов разрешенных в рамках одной persistent
# сессии. Значение 0 - число запросов не ограничено.
MaxKeepAliveRequests 100


# ------------------------------------------------------------------------------
# ПАРАМЕТРЫ MPM


# Модель Prefork подразумевает, что для обслуживания каждого клиента порождается
# дочерний процесс httpd имеющий один поток и обслуживающий этого клиента.

<IfModule prefork.c>

  # Количество процессов httpd запускаемых при старте Apache:
  StartServers 8

  # Минимальное количество процессов httpd простаивающих в ожидании новых
  # подключения новых клиентов:
  MinSpareServers 5

  # Максимальное количество простаивающих процессов httpd:
  MaxSpareServers 20

  # Для prefork - максимальное число одновременно запущенных процессов httpd:
  ServerLimit 256

  # Максимальное число соединений, которые одновременно может обслужить сервер.
  # Для prefork - фактически одно и то же что и ServerLimit, - максимальное
  # число дочерних процессов, это число должно меньше и равно ServerLimit.
  MaxClients 256

  # Максимальное количество соединений, которые сможет обработать экземпляр
  # процесса httpd прежде чем будет принудительно завершен:
  MaxRequestsPerChild 4000

</IfModule>

# В модели worker дочерние процессы являются многопоточными и могут обслуживать
# параллельно множество клиентов.

<IfModule worker.c>

  # Количество процессов httpd запускаемых при старте Apache:
  StartServers 4

  # Максимальное число соединений, которые одновременно может обслужить сервер.
  # Для worker - максимальное количество потоков во всех процессах сервера.
  MaxClients 300

  # Минимальное количество потоков во всех процессах httpd простаивающих в
  # ожидании новых подключения новых клиентов:
  MinSpareThreads 25

  # Максимальное количество простаивающих потоков:
  MaxSpareThreads 75

  # Количество потоков запускаемых в одном экземпляре процесса httpd:
  ThreadsPerChild 25

  # Максимальное количество соединений, которые сможет обработать экземпляр
  # процесса httpd прежде чем будет принудительно завершен.
  # Значение 0 - ограничение не действует, процессы httpd не будут завершаться.
  MaxRequestsPerChild 0

</IfModule>


# ------------------------------------------------------------------------------
# СПИСОК ЗАГРУЖАЕМЫХ МОДУЛЕЙ

# NB: Прежде чем использовать директивы настраивающие поведения того или иного
# модуля, - его необходимо предварительно загрузить. Модули скомпилированные с
# httpd статически здесь перечислять не нужно - список таких модулей можно
# увидеть в выводе httpd -l.

# NB: См. описание модулей на http://httpd.apache.org/docs/$VERSION/mod/

LoadModule auth_basic_module modules/mod_auth_basic.so
LoadModule authn_file_module modules/mod_authn_file.so
LoadModule authn_alias_module modules/mod_authn_alias.so
LoadModule authn_anon_module modules/mod_authn_anon.so
LoadModule authn_default_module modules/mod_authn_default.so
LoadModule authz_host_module modules/mod_authz_host.so
LoadModule authz_user_module modules/mod_authz_user.so
LoadModule authz_owner_module modules/mod_authz_owner.so
LoadModule authz_groupfile_module modules/mod_authz_groupfile.so
LoadModule authz_default_module modules/mod_authz_default.so
LoadModule dir_module modules/mod_dir.so
LoadModule include_module modules/mod_include.so
LoadModule log_config_module modules/mod_log_config.so
LoadModule logio_module modules/mod_logio.so
LoadModule env_module modules/mod_env.so
LoadModule ext_filter_module modules/mod_ext_filter.so
LoadModule mime_magic_module modules/mod_mime_magic.so
LoadModule expires_module modules/mod_expires.so
LoadModule deflate_module modules/mod_deflate.so
LoadModule headers_module modules/mod_headers.so
LoadModule usertrack_module modules/mod_usertrack.so
LoadModule setenvif_module modules/mod_setenvif.so
LoadModule mime_module modules/mod_mime.so
LoadModule status_module modules/mod_status.so
LoadModule autoindex_module modules/mod_autoindex.so
LoadModule info_module modules/mod_info.so
LoadModule vhost_alias_module modules/mod_vhost_alias.so
LoadModule negotiation_module modules/mod_negotiation.so
LoadModule actions_module modules/mod_actions.so
LoadModule alias_module modules/mod_alias.so
LoadModule substitute_module modules/mod_substitute.so
LoadModule rewrite_module modules/mod_rewrite.so
LoadModule cache_module modules/mod_cache.so
LoadModule suexec_module modules/mod_suexec.so
LoadModule disk_cache_module modules/mod_disk_cache.so
LoadModule cgi_module modules/mod_cgi.so
LoadModule version_module modules/mod_version.so


# ------------------------------------------------------------------------------
# DIRECTORY-СПЕЦИФИЧНЫЕ ПАРАМЕТРЫ

# Для каждого каталога внутри DocumentRoot можно настроить те или иные параметры
# значения по умолчанию, используются к корневому каталогу и ко всем дочерним,
# в случае если для них настройки не переопределены на нечто другое.
<Directory />

  # Разрешить переход по символическим ссылкам?
  Options Indexes FollowSymLinks

  AllowOverride None

</Directory>

<Directory "/var/www/html">

  # Список включенных опций.
  # См. описание http://httpd.apache.org/docs/$VERSION/mod/core.html#options
  Options Indexes FollowSymLinks ExecCGI

  # Директива AllowOverride контролирует то, что может быть помещено в
  # файлы .htaccess:
  AllowOverride All

  # Порядок обработки ограничений доступа:
  Order allow,deny

  # Разрешить доступ всем:
  Allow from all

</Directory>

# Ограничения доступа к файлам .htaccess:
<Files ~ "^\.ht">

  # Порядок обработки ограничений доступа:
  Order allow,deny

  # Запретить доступ всем:
  Deny from all

  #
  Satisfy All

</Files>


# ------------------------------------------------------------------------------
# MIME-ТИПЫ

# Расположение файла с описанием MIME-типов:
TypesConfig "/etc/mime.types"

# MIME-тип используемый по умолчанию в случае, если сервер не может определить
# MIME документа например по расширению имени файла или его содержимому.
DefaultType text/plain

# Модуль mod_mime_magic позволяет определять тип файла по его содержимому.
<IfModule mod_mime_magic.c>

  # Расположение файла с шаблонами поиска по содержимому для mod_mime_magic:
  MIMEMagicFile "conf/magic"

</IfModule>


# ------------------------------------------------------------------------------
# ВЕДЕНИЕ ЖУРНАЛОВ И ОТЛАДКА

# Использовать разрешение имен (обычно DNS) для определения имен клиентов?
HostnameLookups Off

# Файл журнала ошибок:
ErrorLog "logs/error_log"

# Уровень детализации сообщений попадающих в ErrorLog.
# Возможные значения: debug, info, notice, warn, error, crit, alert, emerg.
LogLevel debug

# Определение собственного формата сообщений журналов:
# LogFormat "определение" произвольное_имя_формата
LogFormat "%h %l %u %t \"%r\" %>s %b \"%{Referer}i\" \"%{User-Agent}i\"" combined
LogFormat "%h %l %u %t \"%r\" %>s %b" common
LogFormat "%{Referer}i -> %U" referer
LogFormat "%{User-agent}i" agent

# Расположение "кастомизированного" журнала и формат применяемый для его ведения
CustomLog "logs/access_log" combined


# ------------------------------------------------------------------------------

# Загружать дополнительные конфигурационные файлы из указанной директории:
Include conf.d/*.conf
