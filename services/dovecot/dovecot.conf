# dovecot(1)
# doveconf(1)
# doveadm(1)

# Конфигурационный файл MAA/MDA Dovecot.

# ------------------------------------------------------------------------------
# ОСНОВНЫЕ ПАРАМЕТРЫ

# Протоколы, обслуживаемые Dovecot, в отличие от Dovecot 1.x здесь не нужно
# указывать pop3s и imaps.
protocols = imap pop3

# Приветственное сообщение для клиентов.
login_greeting = Dovecot MAA


# ------------------------------------------------------------------------------
# ВЕДЕНИЕ ЖУРНАЛОВ И ОТЛАДКА

# Отправлять сообщения в указанную группу syslog(3).
syslog_facility = mail

# Префикс для каждого сообщения в журнале.
# Коды "%" представлены в формате strftime(3).
log_timestamp = %b %d %H:%M

# Формат сообщений относящихся к аутентификации.
login_log_format_elements = user=<%u> method=%m remote_ip=%r local_ip=%l %c

# Записывать сообщения о неудачных попытках аутентификации?
auth_verbose = no

# Эквивалентно auth_verbose + включает запись сообщений и всех попытках
# аутентификации, пароли отображаются как '<hidden>'
auth_debug = no

# Эквивалентно auth_debug + записывает все пароли в открытом виде.
auth_debug_passwords = no

# Включить подробный отладочный лог, будет записываться вся информация.
mail_debug = no

# Включить отладочные сообщения SSL/TLS?
verbose_ssl = no


# ------------------------------------------------------------------------------
# АУТЕНТИФИКАЦИЯ

# Кэширование аутентификационных данных:
# См. doc/wiki/Authentication.Caching.txt

# Размер кэша аутентификационных данных (auth cache) в байтах.
# Значение '0' - auth cache отключен. Кэш может быть очищен принудительно путем
# отправки сигнала SIGHUP процессу dovecot-auth.
auth_cache_size = 4096

# Время (в сек.), в течение которого будут храниться записи в auth cache.
# Записи не будут использоваться по окончаннии времени хранения, за исключением
# ситуации когда недоступна основная база с аутентификационными данными
# (читай паролями). Также учитывается потенциальное изменение паролей - в случае
# если предыдущая аутентификация была успешной, а текущая провалилась - в этом
# случае аутентификационные данные будут запрошены сразу у основной базы данных.
auth_cache_ttl = 3600

# Отключить plaintext способы аутентификации?
# Использование plaintext аутентификации безопасно в случае использования TLS
# или в случае если клиент и сервер работают на одной машине и трафик проходит
# через loopback.
disable_plaintext_auth = no

# Поддерживаемые способы аутентификации:
# См. doc/wiki/Authentication.Mechanisms.txt 
auth_mechanisms = plain login cram-md5

# Список разрешённых символов в имени пользователя.
# Если в имени пользователя содержатся символы отличные от перечисленных здесь,
# то в этом случае такой пользователь никогда не сможет успешно пройти процесс
# аутентификации.
auth_username_chars = abcdefghijklmnopqrstuvwxyz0123456789.-_@


# ------------------------------------------------------------------------------
# БАЗЫ ДАННЫХ ПОЛЬЗОВАТЕЛЕЙ И ПАРОЛЕЙ


# Passdb - база аутентификационных данных.
passdb {

  # Существует несколько типов passdb, все существующие типы passdb описаны в
  # doc/wiki/PasswordDatabase.txt
  #

  # Использовать для БД простую passwd-like схему (формат) хранения данных.
  driver = passwd-file

  # Путь к файлу с хешированными паролями.
  args = /etc/dovecot/auth.db

}

# Userdb - база данных аккаунтов содержит различную информацию о пользователях,
# в зависимости от конфигурации Dovecot это могут быть как виртуальные так и
# реальные (т.е. системные) аккаунты. Реальные аккаунты - это аккаунты уровня ОС
# под которой запущен Dovecot, они обычно (но не всегда) описываются в файле
# passwd(5). Виртуальные аккаунты не связанны с аккаунтами ОС и относятся только
# к Dovecot. В зависимотсти от того какой тип учетных записей использует
# Dovecot, userdb может содержать различную информацию (напр. UID, пути к
# домашним каталогам и пр.), в любом случае userdb всегда должна содержать
# информацию о расположении каталогов (файлов для mbox) почтовых ящиков.
userdb {

  # Существует несколько типов userdb, они отличаются тем как и где происходит
  # поиск инфрмации о пользователях, все существующие типы userdb описаны в
  # doc/wiki/UserDatabase.txt
  #
  # Тип 'static' используется в случае, когда необходимо связать username и
  # физическое расположение почтового ящика с помощью шаблона в который
  # подставляются необходимые переменные.
  driver = static

  # Для получения доступа к файлам пользователей используются
  # следующие параметры:
  #
  # uid - UID системного пользователя (из passwd(5)), который является
  # фактическим владельцем файлов;
  #
  # gid - аналогично UID, определяет группу владеющую файлами;
  #
  # home - расположение "домашней директории" виртуального пользователя,
  # эти директории не имеют ничего общего с домашними директориями пользователей
  # системы - они используются для хранения персональных файлов ВП таких как
  # сценарии Sieve или *.core-файлов. Значение этого параметра перезаписывает
  # глобальное значение "mail_home";
  #
  # mail - расположение директории в которой хранится непосредственно почта.
  # Значение этого параметра перезаписывает глобальное значение "mail_location";
  #
  # Также можно использовать переменные для формирования гибких путей к
  # home и mail директориям.
  # Описание переменных см. в doc/wiki/Variables.txt
  args = uid=1000 gid=1000 home=/var/vmail/home/%n mail=maildir:/var/vmail/mbx/%n

}


# ------------------------------------------------------------------------------
# ПРОЦЕССЫ DOVECOT

# См. <http://wiki2.dovecot.org/Services>

# Процесс аутентификации SASL:
#
# См. <http://wiki2.dovecot.org/Sasl>
#     <http://wiki2.dovecot.org/HowTo/PostfixAndDovecotSASL>
#
service auth {

  # Dovecot предоставляет Postfix аутентифицировать пользователей посредством
  # SASL путем обращения к БД пользователей.
  # Для обеспечения связи с Postfix, Dovecot создает при запуске сокет, через
  # который происходит взаимодействие Postfix <-> Dovecot.
  unix_listener /var/spool/postfix/private/dovecot {

    # Владелец/группа и права выставляемые на файл сокета при его создании.
    user = postfix
    group = postfix
    mode = 0660

  }

  # Пользователь с правами которого запускается процесс.
  user = vmail

}

# ------------------------------------------------------------------------------
# LOGIN-ПРОЦЕССЫ

# См. <http://wiki2.dovecot.org/LoginProcess>


# Login процесс для IMAP: 
service imap-login {

  # Параметры сокета для IMAP
  inet_listener imap { 

    # Прослушивать указанный адрес/порт
    address = 0.0.0.0

    # Если в качестве порта указать '0' - в этом случае не будет прослушиваться
    # никакой порт
    port = 143

    # Включить SSL/TLS?
    ssl = no

  }

  # Максимальное число одновременно работающих процессов.
  process_limit = 100

  # Минимальное количество процессов запущенных и ожидающих новых подключений.
  process_min_avail = 25

  # Количество обслуженных соединений после которых процесс будет перезапущен
  service_count = 100

  # Пользователь использующийся для создания аутентификационного процесса. Этому
  # пользователю не должен быть предоставлен доступ к почте. Он занимается
  # только процессами аутентификации пользователей.
  user = dovecot

  # Максимальный размер login процессов.
  vsz_limit = 64 M

}

# Login процесс для POP3:
service pop3-login {

  # Параметры сокета для POP3
  inet_listener pop3 { 

    address = 0.0.0.0
    port = 110
    ssl = no

  }

  process_limit = 100
  process_min_avail = 20
  service_count = 100
  user = dovecot
  vsz_limit = 64 M

}

# Процесс обеспечивающий взаимодействие через протокол IMAP:
service imap {

  process_limit = 200

}

# Процесс обеспечивающий взаимодействие через протокол POP3:
service pop3 {

  process_limit = 200

}
